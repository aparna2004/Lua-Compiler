%{
#include <stdio.h>
#include "ast.h"
#include "y.tab.h" // Generated by Yacc
extern YYSTYPE yylval;  // Match Yacc's YYSTYPE from %union
%}

%option noyywrap

%%

"if"         { return IF; }
"else"       { return ELSE; }
"while"      { return WHILE; }
"for"        { return FOR; }
"do"         { return DO; }
"true"       { yylval.num = 1; return BOOLEAN; }
"false"      { yylval.num = 0; return BOOLEAN; }

[a-zA-Z_][a-zA-Z0-9_]*  { yylval.str = strdup(yytext); return IDENTIFIER; }
[0-9]+                  { yylval.num = atoi(yytext); return NUMBER; }

"="          { return ASSIGN; }
"+"          { return PLUS; }
"-"          { return MINUS; }
"*"          { return MULT; }
"/"          { return DIV; }
"<"          { return LT; }
">"          { return GT; }
"=="         { return EQ; }
"&&"         { return AND; }
"||"         { return OR; }

"("          { return LPAREN; }
")"          { return RPAREN; }
"{"          { return LBRACE; }
"}"          { return RBRACE; }
";"          { return SEMICOLON; }

[ \t\n]      ; /* Ignore whitespace */
.            { fprintf(stderr, "Unknown character: %s\n", yytext); }

%%

// No changes needed here; noyywrap ensures single-file processing
